{
  "version": 3,
  "sources": ["../../../../../apps/kanban_plus/kanban_plus/public/js/kanban_plus.bundle.js"],
  "sourcesContent": ["frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tif (this.doctype == \"File\" && view == \"List\") {\n\t\t\tview = \"File\";\n\t\t}\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\n\t\tlet search_params = cur_list?.get_search_params();\n\t\tif (search_params) {\n\t\t\tfrappe.route_options = Object.fromEntries(search_params);\n\t\t}\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\"),\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\"),\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then((calendars) => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\"),\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition: this.doctype === \"Communication\" && frappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (has_common(frappe.user_roles, [\"System Manager\", \"Administrator\"])) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Inbox\", accounts, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\"),\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\"),\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) =>\n\t\t\t\t\t\tthis.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n            KanbanPlus: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) =>\n\t\t\t\t\t\tthis.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\t\t\t\tthis.list_view.meta.fields.find((i) => i.fieldname === \"longitude\")) ||\n\t\t\t\t\tthis.list_view.meta.fields.find(\n\t\t\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype == \"Geolocation\"\n\t\t\t\t\t),\n\t\t\t\taction: () => this.set_route(\"map\"),\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach((view) => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler && views[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(__(view));\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\n\t\tlet placeholder = __(\"Select {0}\", [__(view)]);\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map((item) => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${item.name}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper.find(\".sidebar-action a\").click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map((k) => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tlet perms = this.list_view.board_perms;\n\t\tlet can_create = perms ? perms.create : true;\n\t\tif (can_create) {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(frappe.get_route().slice(-1)[0] || \"\");\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = (reports) => {\n\t\t\treports.map((r) => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route = r.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: __(r.title || r.name),\n\t\t\t\t\t\t\troute: route,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tfunction fetch_kanban_board(doctype) {\n\t\t\tfrappe.db.get_value(\n\t\t\t\t\"Kanban Board\",\n\t\t\t\t{ reference_doctype: doctype },\n\t\t\t\t\"name\",\n\t\t\t\t(board) => {\n\t\t\t\t\tif (!$.isEmptyObject(board)) {\n\t\t\t\t\t\tfrappe.set_route(\"list\", doctype, \"kanban\", board.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.views.KanbanView.show_kanban_dialog(doctype);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"]?.last_kanban_board;\n\t\tif (!last_opened_kanban) {\n\t\t\tfetch_kanban_board(this.doctype);\n\t\t} else {\n\t\t\tfrappe.db.exists(\"Kanban Board\", last_opened_kanban).then((exists) => {\n\t\t\t\tif (exists) {\n\t\t\t\t\tfrappe.set_route(\"list\", this.doctype, \"kanban\", last_opened_kanban);\n\t\t\t\t} else {\n\t\t\t\t\tfetch_kanban_board(this.doctype);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map((calendar) => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${calendar.name}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach((account) => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\" ? \"All Accounts\" : account.email_account;\n\t\t\tlet route = `/app/communication/view/inbox/${email_account}`;\n\t\t\tlet display_name = [\"All Accounts\", \"Sent Mail\", \"Spam\", \"Trash\"].includes(\n\t\t\t\taccount.email_id\n\t\t\t)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route,\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n"],
  "mappings": "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",
  "names": ["reports"]
}
